// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //output   = "../generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Paciente {
  id          Int      @id @default(autoincrement())
  nome        String
  motivo      String
  prioridade  Int
  status      String   @default("Aguardando Atendimento")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  atendimentos Atendimento[]
}

model Atendimento {
  id          Int      @id @default(autoincrement())
  pacienteId  Int
  medicoId    Int
  status      String   @default("Em Andamento")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  paciente    Paciente @relation(fields: [pacienteId], references: [id])
  medico      Medico   @relation(fields: [medicoId], references: [id])
  @@index([pacienteId])
  @@index([medicoId])
}

model Medico {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  senha     String
  role      String   @default("MEDICO")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  atendimentos Atendimento[] // Relação com atendimentos
}

// Novo Modelo para Atendente
model Atendente {
  id        Int      @id @default(autoincrement())
  nome      String
  email     String   @unique
  senha     String
  // Adicione um campo de permissão
  role      String   @default("ATENDENTE")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}